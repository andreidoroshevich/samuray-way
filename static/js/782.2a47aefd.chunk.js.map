{"version":3,"file":"static/js/782.2a47aefd.chunk.js","mappings":"sQAwDA,EA5CkB,SAACA,GAGf,IAFA,IAAIC,EAAaC,KAAKC,KAAKH,EAAMI,gBAAkBJ,EAAMK,UACrDC,EAAQ,GACHC,EAAI,EAAGA,GAAKN,EAAYM,IAC7BD,EAAME,KAAKD,GAGf,IACIE,EAAeP,KAAKC,KAAKF,EADX,IAElB,GAAwCS,EAAAA,EAAAA,UAAS,GAAjD,eAAKC,EAAL,KAAoBC,EAApB,KACIC,EAHc,IAGWF,EAAgB,GAAmB,EAC5DG,EAJc,GAIWH,EAG7B,OACI,iBAAKI,UAAWC,EAAAA,EAAAA,MAAhB,UAEKL,EAAgB,IACb,mBAAQI,UAAWC,EAAAA,EAAAA,gBAAwBC,QAAS,WAChDL,EAAiBD,EAAgB,IADrC,kBAKHL,EAAMY,QAAO,SAAAC,GAAC,OAAIA,GAAKN,GAAyBM,GAAIL,KAChDM,KAAI,SAACD,GACF,OACI,iBAAMJ,UAAS,UAAKf,EAAMqB,cAAgBF,GAAKH,EAAAA,EAAAA,aAAhC,YAAuDA,EAAAA,EAAAA,MAChEC,QAAS,SAACK,GACNtB,EAAMuB,cAAcJ,IAF9B,SAGUA,OAMrBV,EAAeE,IACZ,mBAAQI,UAAWC,EAAAA,EAAAA,gBAAwBC,QAAS,WAChDL,EAAiBD,EAAgB,IADrC,sB,mBCQhB,EA1Ca,SAACX,GACV,OACI,0BACI,kBAAOe,UAAWC,EAAAA,EAAAA,MAAlB,UACI,4BACA,gBAAID,UAAWC,EAAAA,EAAAA,GAAf,WACI,gBAAID,UAAWC,EAAAA,EAAAA,MAAf,WACI,0BACI,SAAC,KAAD,CAASQ,GAAI,YAAcxB,EAAMyB,KAAKC,GAAtC,UACI,gBAAKC,IAAK,oBAAqBZ,UAAWC,EAAAA,EAAAA,UACrCY,IAAgC,MAA3B5B,EAAMyB,KAAKI,OAAOC,MAAgB9B,EAAMyB,KAAKI,OAAOC,MAAQC,SAG9E,yBACK/B,EAAMyB,KAAKO,UACN,mBAAQC,SAAUjC,EAAMkC,oBAAqBnB,UAAWC,EAAAA,EAAAA,OAChDC,QAAS,WACLjB,EAAMmC,SAASnC,EAAMyB,KAAKC,KAFtC,uBAIA,mBAAQO,SAAUjC,EAAMkC,oBAAqBnB,UAAWC,EAAAA,EAAAA,OAChDC,QAAS,WACLjB,EAAMoC,OAAOpC,EAAMyB,KAAKC,KAFpC,0BAMd,gBAAIX,UAAWC,EAAAA,EAAAA,KAAf,WACI,4BACI,gBAAKD,UAAWC,EAAAA,EAAAA,aAAhB,SAAsChB,EAAMyB,KAAKY,QACjD,gBAAKtB,UAAWC,EAAAA,EAAAA,OAAhB,SAAgChB,EAAMyB,KAAKa,aAE/C,4BACI,gBAAKvB,UAAWC,EAAAA,EAAAA,aAAhB,SAAsC,wBACtC,yBAAM,kCA9BhBhB,EAAMyB,KAAKC,KCyB7B,EAtBc,SAAC1B,GACX,OACI,4BACI,SAAC,EAAD,CAAWqB,YAAarB,EAAMqB,YACnBE,cAAevB,EAAMuB,cACrBlB,SAAUL,EAAMK,SAChBD,gBAAiBJ,EAAMI,kBAG9BJ,EAAMuC,MAAMnB,KAAI,SAAAoB,GAAC,OACb,SAAC,EAAD,CAAMf,KAAMe,EACNJ,OAAQpC,EAAMoC,OACdD,SAAUnC,EAAMmC,SAChBD,oBAAqBlC,EAAMkC,6B,oBC7BxCO,EAAa,SAACC,GACvB,OAAOA,EAAMC,UAAUJ,OAGdK,EAAY,SAACF,GACtB,OAAOA,EAAMC,UAAUtC,UAGdwC,EAAmB,SAACH,GAC7B,OAAOA,EAAMC,UAAUvC,iBAGd0C,EAAe,SAACJ,GACzB,OAAOA,EAAMC,UAAUtB,aAGd0B,EAAc,SAACL,GACxB,OAAOA,EAAMC,UAAUK,YAGdC,EAAuB,SAACP,GACjC,OAAOA,EAAMC,UAAUT,qBCgBrBgB,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GAqBD,OArBCA,EAAAA,EAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KAYF3B,cAAgB,SAAC4B,GACb,EAAKnD,MAAMoD,gBAAgBD,EAAY,EAAKnD,MAAMK,WAQrD,EAkBA,OAlBA,yCApBD,WACIgD,KAAKrD,MAAMsD,SAASD,KAAKrD,MAAMqB,YAAagC,KAAKrD,MAAMK,YAQ1D,oBAaD,WAEI,OACI,iCACI,gBAAKU,UAAWC,EAAAA,EAAAA,QAAhB,SAAiCqC,KAAKrD,MAAMgD,YAAa,SAACO,EAAA,EAAD,IAAe,QACxE,SAAC,EAAD,CAAOhB,MAAOc,KAAKrD,MAAMuC,MAClBlC,SAAUgD,KAAKrD,MAAMK,SACrBgB,YAAagC,KAAKrD,MAAMqB,YACxBjB,gBAAiBiD,KAAKrD,MAAMI,gBAC5BgC,OAAQiB,KAAKrD,MAAMoC,OACnBD,SAAUkB,KAAKrD,MAAMmC,SACrBZ,cAAe8B,KAAK9B,cACpBW,oBAAqBmB,KAAKrD,MAAMkC,6BAIlD,EAvCCgB,CAAuBM,EAAAA,WA2G7B,GAAeC,EAAAA,EAAAA,KACXC,EAAAA,EAAAA,KAlEoB,SAAChB,GACrB,MAAO,CACHH,MAAOE,EAAaC,GACpBrC,SAAUuC,EAAYF,GACtBtC,gBAAiByC,EAAmBH,GACpCrB,YAAayB,EAAeJ,GAC5BM,WAAYD,EAAcL,GAC1BR,oBAAqBe,EAAuBP,MA2DoC,CAChFN,OAAAA,EAAAA,GACAD,SAAAA,EAAAA,GACAwB,eAAAA,EAAAA,GACAL,SAAAA,EAAAA,GACAF,gBAAAA,EAAAA,KANR,CAOQF,I,mBCzJR,KAAgB,UAAY,yBAAyB,GAAK,kBAAkB,MAAQ,qBAAqB,KAAO,oBAAoB,aAAe,4BAA4B,MAAQ,qBAAqB,OAAS,sBAAsB,OAAS,sBAAsB,KAAO,oBAAoB,aAAe,4BAA4B,MAAQ,qBAAqB,UAAY,yBAAyB,gBAAkB,iC,yJCGrZ,SAASU,EAAeC,EAAKtD,GAC1C,OCLa,SAAyBsD,GACtC,GAAIC,MAAMC,QAAQF,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKtD,GACjD,IAAIyD,EAAY,MAAPH,EAAc,KAAyB,qBAAXI,QAA0BJ,EAAII,OAAOC,WAAaL,EAAI,cAE3F,GAAU,MAANG,EAAJ,CACA,IAIIG,EAAIC,EAJJC,EAAO,GACPC,GAAK,EACLC,GAAK,EAIT,IACE,IAAKP,EAAKA,EAAGQ,KAAKX,KAAQS,GAAMH,EAAKH,EAAGS,QAAQC,QAC9CL,EAAK7D,KAAK2D,EAAGQ,QAETpE,GAAK8D,EAAKO,SAAWrE,GAH4B+D,GAAK,IAK5D,MAAOO,GACPN,GAAK,EACLH,EAAKS,EACL,QACA,IACOP,GAAsB,MAAhBN,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIO,EAAI,MAAMH,GAIlB,OAAOC,GFtBuB,CAAqBR,EAAKtD,KAAM,EAAAuE,EAAA,GAA2BjB,EAAKtD,IGLjF,WACb,MAAM,IAAIwE,UAAU,6IHIgF","sources":["components/common/Paginator/Paginator.tsx","components/Users/User.tsx","components/Users/Users.tsx","redux/users-selectors.ts","components/Users/UsersContainer.tsx","webpack://social-network/./src/components/Users/users.module.css?9211","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport styles from \"../../Users/users.module.css\";\r\n// @ts-ignore\r\nimport userPhoto from \"../../../assets/images/user-profile.png\";\r\n\r\ntype PaginatorPropsType = {\r\n    pageSize: number\r\n    currentPage: number\r\n    totalUsersCount: number\r\n    onPageChanged: (pageNumber: number) => void\r\n}\r\n\r\nconst Paginator = (props: PaginatorPropsType) => {\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize)\r\n    let pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionSize = 10\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n\r\n    return (\r\n        <div className={styles.pages}>\r\n\r\n            {portionNumber > 1 &&\r\n                <button className={styles.paginatorButton} onClick={() => {\r\n                    setPortionNumber(portionNumber - 1)\r\n                }}>prev</button>\r\n            }\r\n\r\n            {pages.filter(p => p >= leftPortionPageNumber && p<= rightPortionPageNumber)\r\n                .map((p) => {\r\n                    return (\r\n                        <span className={`${props.currentPage === p && styles.selectedPage} ${styles.span}`}\r\n                              onClick={(e) => {\r\n                                  props.onPageChanged(p)\r\n                              }}>{p}\r\n                </span>\r\n                    )\r\n\r\n                })}\r\n\r\n            {portionCount > portionNumber &&\r\n                <button className={styles.paginatorButton} onClick={() => {\r\n                    setPortionNumber(portionNumber + 1)\r\n                }}>next</button>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginator","import React from \"react\";\r\nimport styles from \"./users.module.css\";\r\n// @ts-ignore\r\nimport userPhoto from \"../../assets/images/user-profile.png\";\r\nimport {UserType} from \"../../redux/users-reducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport type UserPropsType = {\r\n    user: UserType,\r\n    follow: (userId: number) => void,\r\n    unfollow: (userId: number) => void,\r\n    followingInProgress: boolean\r\n}\r\n\r\nconst User = (props: UserPropsType) => {\r\n    return (\r\n        <div key={props.user.id}>\r\n            <table className={styles.table}>\r\n                <tbody>\r\n                <tr className={styles.tr}>\r\n                    <td className={styles.photo}>\r\n                        <div>\r\n                            <NavLink to={'/profile/' + props.user.id}>\r\n                                <img alt={'missing userPhoto'} className={styles.userPhoto}\r\n                                     src={props.user.photos.small != null ? props.user.photos.small : userPhoto}/>\r\n                            </NavLink>\r\n                        </div>\r\n                        <div>\r\n                            {props.user.followed\r\n                                ? <button disabled={props.followingInProgress} className={styles.button}\r\n                                          onClick={() => {\r\n                                              props.unfollow(props.user.id)\r\n                                          }}>Unfollow</button>\r\n                                : <button disabled={props.followingInProgress} className={styles.button}\r\n                                          onClick={() => {\r\n                                              props.follow(props.user.id)\r\n                                          }}>Follow</button>}\r\n                        </div>\r\n                    </td>\r\n                    <td className={styles.name}>\r\n                        <div>\r\n                            <div className={styles.marginBottom}>{props.user.name}</div>\r\n                            <div className={styles.status}>{props.user.status}</div>\r\n                        </div>\r\n                        <div>\r\n                            <div className={styles.marginBottom}>{'u.location.country'}</div>\r\n                            <div>{'u.location.city'}</div>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User","import React from \"react\";\r\n// @ts-ignore\r\nimport userPhoto from \"../../assets/images/user-profile.png\";\r\nimport {UserType} from \"../../redux/users-reducer\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nexport type UsersPropsType = {\r\n    users: Array<UserType>,\r\n    pageSize: number\r\n    currentPage: number\r\n    totalUsersCount: number\r\n    follow: (userId: number) => void,\r\n    unfollow: (userId: number) => void,\r\n    onPageChanged: (pageNumber: number) => void\r\n    followingInProgress: boolean\r\n}\r\n\r\n\r\nconst Users = (props: UsersPropsType) => {\r\n    return (\r\n        <div>\r\n            <Paginator currentPage={props.currentPage}\r\n                       onPageChanged={props.onPageChanged}\r\n                       pageSize={props.pageSize}\r\n                       totalUsersCount={props.totalUsersCount}\r\n            />\r\n            {\r\n                props.users.map(u =>\r\n                    <User user={u}\r\n                          follow={props.follow}\r\n                          unfollow={props.unfollow}\r\n                          followingInProgress={props.followingInProgress}\r\n                    />\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Users","import {RootState} from \"./redux-store\";\r\n\r\n\r\nexport const requestUsers=(state: RootState) =>{\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getPageSize=(state: RootState) =>{\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount=(state: RootState) =>{\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage=(state: RootState) =>{\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching=(state: RootState) =>{\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress=(state: RootState) =>{\r\n    return state.usersPage.followingInProgress\r\n}\r\n\r\n","import React from 'react'\nimport {connect} from \"react-redux\";\nimport {\n    follow,\n    getOnPageChange, getUsers,\n    setCurrentPage,\n    unfollow,\n    UserType\n} from \"../../redux/users-reducer\";\nimport {RootState} from \"../../redux/redux-store\";\n// @ts-ignore\nimport Users from \"./Users\";\nimport styles from \"./users.module.css\";\nimport Preloader from \"../common/preloader/Preloader\";\nimport {compose} from \"redux\";\nimport {\n    getCurrentPage, getFollowingInProgress,\n    getIsFetching, getPageSize,\n    getTotalUsersCount,\n    requestUsers\n} from \"../../redux/users-selectors\";\n\nexport type MapDispatchPropsType = {\n    follow: (userId: number) => void,\n    unfollow: (userId: number) => void,\n    setCurrentPage: (pageNumber: number) => void\n    getUsers: (currentPage: number, pageSize: number)=>void\n    getOnPageChange: (pageNumber: number, pageSize: number)=>void\n}\n\nexport type MapStateToPropsType = {\n    users: Array<UserType>,\n    pageSize: number,\n    totalUsersCount: number,\n    currentPage: number,\n    isFetching: boolean,\n    followingInProgress: boolean\n}\n\n\nclass UsersContainer extends React.Component<MapStateToPropsType & MapDispatchPropsType> {\n    componentDidMount() {\n        this.props.getUsers(this.props.currentPage, this.props.pageSize)\n        // this.props.setIsFetching(true)\n        //\n        // usersAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data => {\n        //     this.props.setIsFetching(false)\n        //     this.props.setUsers(data.items)\n        //     this.props.setUsersTotalCount(data.totalCount)\n        // })\n    }\n\n    onPageChanged = (pageNumber: number) => {\n        this.props.getOnPageChange(pageNumber, this.props.pageSize)\n\n        // this.props.setCurrentPage(pageNumber)\n        // this.props.setIsFetching(true)\n        // usersAPI.getUsers(pageNumber, this.props.pageSize).then(data => {\n        //     this.props.setIsFetching(false)\n        //     this.props.setUsers(data.items)\n        // })\n    }\n\n    render() {\n\n        return (\n            <>\n                <div className={styles.preload}>{this.props.isFetching ? <Preloader/> : null}</div>\n                <Users users={this.props.users}\n                       pageSize={this.props.pageSize}\n                       currentPage={this.props.currentPage}\n                       totalUsersCount={this.props.totalUsersCount}\n                       follow={this.props.follow}\n                       unfollow={this.props.unfollow}\n                       onPageChanged={this.onPageChanged}\n                       followingInProgress={this.props.followingInProgress}\n                />\n\n            </>)\n    }\n}\n\nconst mapStateToProps = (state: RootState) : MapStateToPropsType => {\n    return {\n        users: requestUsers(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getIsFetching(state),\n        followingInProgress: getFollowingInProgress(state)\n    }\n}\n\n\n\n// const mapStateToProps = (state: RootState) : MapStateToPropsType => {\n//     return {\n//         users: state.usersPage.users,\n//         pageSize: state.usersPage.pageSize,\n//         totalUsersCount: state.usersPage.totalUsersCount,\n//         currentPage: state.usersPage.currentPage,\n//         isFetching: state.usersPage.isFetching,\n//         followingInProgress: state.usersPage.followingInProgress\n//     }\n// }\n\n// const mapDispatchToProps = (dispatch: Dispatch) : MapDispatchPropsType=>{\n//     return {\n//         follow: (userId:number) =>{\n//             dispatch(followAC(userId))\n//         },\n//         unfollow: (userId:number) =>{\n//             dispatch(unfollowAC(userId))\n//         },\n//         setUsers: (users: Array<UserType>) =>{\n//             dispatch(setUsersAC(users))\n//         },\n//         setCurrentPage: (pageNumber: number)=>{\n//             dispatch(setCurrentPageAC(pageNumber))\n//         },\n//         setUsersTotalCount: (totalCount: number)=>{\n//             dispatch(setUsersTotalCountAC(totalCount))\n//         },\n//         setIsFetching: (isFetching: boolean)=>{\n//             dispatch(setIsFetchingAC(isFetching))\n//         }\n//\n//     }\n// }\n\n// export default connect(mapStateToProps, {\n//     follow: follow,\n//     unfollow: unfollow,\n//     setUsers: setUsers,\n//     setCurrentPage: setCurrentPage,\n//     setUsersTotalCount: setUsersTotalCount,\n//     setIsFetching: setIsFetching\n// })(UsersContainer)\n\n// export default connect<MapStateToPropsType, MapDispatchPropsType, {},  RootState>(mapStateToProps, {\n//     follow,\n//     unfollow,\n//     setCurrentPage,\n//     getUsers,\n//     getOnPageChange,\n// })(UsersContainer)\n\nexport default compose<React.ComponentType>(\n    connect<MapStateToPropsType, MapDispatchPropsType, {},  RootState>(mapStateToProps, {\n        follow,\n        unfollow,\n        setCurrentPage,\n        getUsers,\n        getOnPageChange,\n    }))(UsersContainer)","// extracted by mini-css-extract-plugin\nexport default {\"userPhoto\":\"users_userPhoto__mInJU\",\"tr\":\"users_tr__5Ab1b\",\"photo\":\"users_photo__qeotk\",\"name\":\"users_name__zYAtB\",\"marginBottom\":\"users_marginBottom__cwPab\",\"table\":\"users_table__gxOmt\",\"status\":\"users_status__BhgCK\",\"button\":\"users_button__cNRX6\",\"span\":\"users_span__5-OgF\",\"selectedPage\":\"users_selectedPage__K79wA\",\"pages\":\"users_pages__LmijR\",\"preloader\":\"users_preloader__SCbU7\",\"paginatorButton\":\"users_paginatorButton__xhNm8\"};","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["props","pagesCount","Math","ceil","totalUsersCount","pageSize","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","className","styles","onClick","filter","p","map","currentPage","e","onPageChanged","to","user","id","alt","src","photos","small","userPhoto","followed","disabled","followingInProgress","unfollow","follow","name","status","users","u","requestUsers","state","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","isFetching","getFollowingInProgress","UsersContainer","pageNumber","getOnPageChange","this","getUsers","Preloader","React","compose","connect","setCurrentPage","_slicedToArray","arr","Array","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","value","length","err","unsupportedIterableToArray","TypeError"],"sourceRoot":""}